AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  a2b-ml-service
  Stack for the FPL ML Service Prediction API (API Gateway -> Lambda (Container) -> S3 Model).

Parameters:
  ModelBucketName:
    Type: String
    Description: REQUIRED. Name of the S3 bucket (in eu-west-2) where the ML model is stored.

  ModelObjectKey:
    Type: String
    Description: REQUIRED. S3 key (path within bucket) to the ML model file (e.g., models/lr_model_v1.joblib).

  LambdaMemorySize:
    Type: Number
    Description: Memory allocated to the Lambda function (MB).
    Default: 512 # Start with 512MB, increase if Pandas/Sklearn need more

  LambdaTimeout:
    Type: Number
    Description: Maximum execution time for the Lambda function (seconds).
    Default: 30 # Max 29s for API Gateway integration anyway unless using different setup

Globals:
  Function:
    Timeout: !Ref LambdaTimeout
    MemorySize: !Ref LambdaMemorySize
    # Runtime is NOT defined globally, as it's determined by the container image
    Environment:
        Variables:
            MODEL_BUCKET: !Ref ModelBucketName
            MODEL_KEY: !Ref ModelObjectKey
            # PYTHONOPTIMIZE: 1 # Optional optimization

Resources:
  # IAM Role for the Prediction Lambda function
  FPLPredictLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: fpl-predict-lambda-role # Using a specific name requires CAPABILITY_NAMED_IAM
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      # Attach AWS managed policies for common permissions
      ManagedPolicyArns:
        # Grants CloudWatch Logs permissions (needed for basic Lambda execution)
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        # Grants permissions to pull images from ECR
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
      # Add specific inline policies only if needed (like S3 access)
      Policies:
        - PolicyName: FPLPredictS3Policy # Keep the specific S3 GetObject permission
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                Resource: !Sub arn:aws:s3:::${ModelBucketName}/${ModelObjectKey}

  # The Prediction Lambda Function using Container Image from ECR
  FPLPredictFunction:
    Type: AWS::Serverless::Function
    Properties:
        FunctionName: fpl-predict-function
        Description: Handles FPL prediction requests via API Gateway (using Container Image from ECR).
        PackageType: Image # Specify deployment as a container image
        Role: !GetAtt FPLPredictLambdaRole.Arn # Link to the IAM role
        # MemorySize and Timeout inherited from Globals
        # Environment variables inherited from Globals
        # ImageUri points to the image already pushed to ECR in eu-west-2
        # Replace with your specific Account ID if different, ensure region/repo/tag match!
        ImageUri: 944331436541.dkr.ecr.eu-west-2.amazonaws.com/a2b-ml-service-repo:minimal-test-311
        Architectures:
        - x86_64
        Events:
          PredictApiEvent: # API Gateway event definition
            Type: HttpApi # Creates an API Gateway HTTP API
            Properties:
              Path: /predict
              Method: post
    # Metadata block is intentionally omitted when using ImageUri

Outputs:
  PredictApiUrl:
    Description: "API Gateway endpoint URL for FPL Predict function"
    # ServerlessHttpApi is an implicit resource created by the HttpApi Event type
    Value: !Sub "https://${ServerlessHttpApi}.execute-api.${AWS::Region}.amazonaws.com/predict"
  FPLPredictFunctionArn:
    Description: "FPL Predict Lambda Function ARN"
    Value: !GetAtt FPLPredictFunction.Arn
  FPLPredictLambdaRoleArn:
    Description: "IAM Role created for FPL Predict function"
    Value: !GetAtt FPLPredictLambdaRole.Arn